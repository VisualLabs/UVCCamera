apply plugin: 'com.android.library'
/*
 *  UVCCamera
 *  library and sample to access to UVC web camera on non-rooted Android device
 *
 * Copyright (c) 2014-2017 saki t_saki@serenegiant.com
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 *  All files in the folder are under this Apache License, Version 2.0.
 *  Files in the libjpeg-turbo, libusb, libuvc, rapidjson folder
 *  may have a different license, see the respective files.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
	repositories {
		mavenCentral()
		google()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:8.2.0'
	}
}

allprojects {
	repositories {
		flatDir {
			dirs '../ucm_camera/libs'
		}
		maven { url 'https://raw.github.com/saki4510t/libcommon/master/repository/' }
		mavenCentral()
		google()
	}
}

ext {
	supportLibVersion = '28.0.0'  // variable that can be referenced to keep support libs consistent
	versionCompiler = 25
	versionTarget = 23
	versionNameString = '1.0.0'
	javaSourceCompatibility = JavaVersion.VERSION_1_7
	javaTargetCompatibility = JavaVersion.VERSION_1_7
}

import org.apache.tools.ant.taskdefs.condition.Os

android {
	namespace "com.serenegiant.uvccamera"
	compileSdkVersion versionCompiler

	compileOptions {
		sourceCompatibility javaSourceCompatibility
		targetCompatibility javaTargetCompatibility
	}

    defaultConfig {
        minSdkVersion 19
		targetSdkVersion versionTarget
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
	sourceSets {
		main {
			jniLibs.srcDir 'src/main/libs'
		}
	}
}

tasks.withType(JavaCompile) {
	compileTask -> compileTask.dependsOn ndkBuild
}

task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
	println('executing ndkBuild')
	Properties properties = new Properties()
	properties.load(project.rootProject.file('local.properties').newDataInputStream())
	def ndkDir = properties.getProperty('ndk.dir')
	def ndkBuildPath = ndkDir
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		ndkBuildPath = ndkDir + '/ndk-build.cmd'
	} else {
		ndkBuildPath = ndkDir + '/ndk-build'
	}
	commandLine ndkBuildPath, '-j8', '-C', file('src/main').absolutePath
}

dependencies {
    implementation fileTree(dir: new File(buildDir, 'libs'), include: '*.jar')
    implementation(name: 'vl-serenegiant-common-release-1.4.3', ext: 'aar')
    implementation 'androidx.annotation:annotation:1.3.0'
}
